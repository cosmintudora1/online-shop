/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.3.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package ro.example.online.shop.api.controller.generated;

import ro.example.online.shop.api.model.generated.Errors;
import ro.example.online.shop.api.model.generated.RemoveItemRequest;
import ro.example.online.shop.api.model.generated.ShoppingCartItems;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen")
@Validated
@Api(value = "remove-from-cart", description = "the remove-from-cart API")
public interface RemoveFromCartApi {

    /**
     * POST /remove-from-cart : Remove product from cart
     *
     * @param requestId UUID unique per session (required)
     * @param removeItemRequest  (required)
     * @return  (status code 200)
     *         or Invalid request (status code 400)
     *         or internal server error (status code 500)
     */
    @ApiOperation(value = "Remove product from cart", nickname = "removeProductFromCart", notes = "", response = ShoppingCartItems.class, authorizations = {
        
        @Authorization(value = "BasicAuth")
         }, tags={ "Shopping Cart", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "", response = ShoppingCartItems.class),
        @ApiResponse(code = 400, message = "Invalid request", response = Errors.class),
        @ApiResponse(code = 500, message = "internal server error", response = Errors.class) })
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/remove-from-cart",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    ResponseEntity<ShoppingCartItems> removeProductFromCart(@ApiParam(value = "UUID unique per session", required = true) @RequestHeader(value = "requestId", required = true) String requestId,@ApiParam(value = "", required = true) @Valid @RequestBody RemoveItemRequest removeItemRequest);

}
